type Post {
  id: ID!
  title: String!
  description: String
  short_description: String
  cover: String
  user_id: ID!
  user: User!
  comments: [Comments!]
}

# Input İşlemleri
input upadtePostInput {
  title: String
  user_id: String
  short_description: String
  description: String
  cover: String
}
input createPostInput {
  title: String!
  user_id: String!
  short_description: String!
  description: String!
  cover: String!
}

# Query Sorguları
type Query {
  #Posts
  posts: [Post!]!
  post(id: ID!, filter: String): Post!
}

# Mutation İşlemleri
type Mutation {
  # Posts
  createPost(data: createPostInput!): Post!
  updatePost(id: ID!, data: upadtePostInput!): Post!
  deletePost(id: ID!): Post!
  deleteAllPosts: DeleteAllOutput!
}

type Subscription {
  postCreated(user_id: ID): Post!
  postUpdated: Post!
  postDeleted: Post!
}
